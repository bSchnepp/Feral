/*
Copyright (c) 2018, 2019, Brian Schnepp

Permission is hereby granted, free of charge, to any person or organization
obtaining  a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute, execute,
and transmit the Software, and to prepare derivative works of the Software,
and to permit third-parties to whom the Software is furnished to do so, all
subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer, must
be included in all copies of the Software, in whole or in part, and all
derivative works of the Software, unless such copies or derivative works are
solely in the form of machine-executable object code generated by a source
language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL
THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY
DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
IN THE SOFTWARE.
 */

#ifndef _FERAL_FERALSTATUS_H_
#define _FERAL_FERALSTATUS_H_

#include <feral/stdtypes.h>

/**
 * @file feral/feralstatus.h
 * @brief A series of definitions for error handling and status for the kernel.
 */

#if defined(__cplusplus)
extern "C"
{
#endif

	/* Error codes. OR these to values below the typedef as needed. */
	/* These are the only bits that actually matter, though I would suggest
	 * leaving bit 3 alone in case we do use it. */
	/* Since the kernel is already 'unstable' enough as it is, not going to
	 * bother with leaving things reserved for forward compatibility. We'll
	 * break everything until 1.0 anyway. */

#define STATUS_SEVERITY_SUCCESS (0x00000000) /* Nothing wrong, do whatever. */
#define STATUS_SEVERITY_INFORMATIONAL \
	(0x40000000) /* Kernel felt the need to do some kind of warning. */
#define STATUS_SEVERITY_WARNING \
	(0x80000000) /* You really should catch this, something's not right. \
		      */
#define STATUS_SEVERITY_ERROR \
	(0xC0000000) /* Stopped by the kernel, something VERY bad has \
			happened. (Disk doesn't exist, I/O error, etc.) */


	/**
	 * @brief A description of the type of status as a result of some
	 * operation.
	 */
	typedef uint32_t FERALSTATUS;

/* Standard internal stuff: */
#define STATUS_SUCCESS \
	(STATUS_SEVERITY_SUCCESS) /* Nothing went wrong. Everything's OK. */

/* Informational:  */
#define STATUS_INFORMATIONAL (STATUS_SEVERITY_INFORMATIONAL | 0x00000000)
#define STATUS_WAS_UNLOCKED (STATUS_SEVERITY_INFORMATIONAL) | (0x00000017)

/* Warnings: */
#define STATUS_WARNING (STATUS_SEVERITY_WARNING | 0x00000000)
#define STATUS_UNAUTHORIZED_MEMORY_LOCATION \
	(STATUS_SEVERITY_WARNING | 0x000000A0)


#define STATUS_UNSUPPORTED_OPERATION (STATUS_SEVERITY_WARNING | 0x0000F0A1)

/* Errors: */
#define STATUS_ERROR (STATUS_SEVERITY_ERROR | 0x00000000)
#define STATUS_STACK_GUARD_VIOLATION (STATUS_SEVERITY_ERROR | 0x00000001)

#define STATUS_MEMORY_ACCESS_VIOLATION (STATUS_SEVERITY_ERROR | 0x00000005)
#define STATUS_MEMORY_PAGE_FAILURE (STATUS_SEVERITY_ERROR | 0x00000006)
#define STATUS_MEMORY_PAGE_CONFLICT (STATUS_SEVERITY_ERROR | 0x00000007)

#define STATUS_WRONG_VOLUME \
	(STATUS_SEVERITY_ERROR \
		| 0x00000012) /* A volume we're not expecting is there. */
#define STATUS_NO_MEDIA_IN_DEVICE \
	(STATUS_SEVERITY_ERROR \
		| 0x00000013) /* There is no media in /Device/Disk<N>. */
#define STATUS_UNRECOGNIZED_MEDIA \
	(STATUS_SEVERITY_ERROR | 0x00000014) /* We don't know the media.*/
#define STATUS_NONEXISTENT_SECTOR \
	(STATUS_SEVERITY_ERROR | 0x00000015) /* Sector of the requested device \
						doesn't exist. */

#define STATUS_OUT_OF_MEMORY (STATUS_SEVERITY_ERROR | 0x00000017)
#define STATUS_INVALID_MEMORY_LOCATION \
	(STATUS_SEVERITY_ERROR | 0x000000A0) /* Memory location attempted to \
						access is invalid. */

#define STATUS_INVALID_OPCODE \
	(STATUS_SEVERITY_ERROR \
		| 0x00080001) /* The kernel attempted to execute an invalid \
				 instruction. */


	/* Gets a STRING representation of an error. */
	STRING KiGetErrorType(IN FERALSTATUS Status);

#if defined(__cplusplus)
}
#endif

#endif
