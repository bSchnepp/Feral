/*
Copyright (c) 2018, Brian Schnepp

Permission is hereby granted, free of charge, to any person or organization 
obtaining a copy of the software and accompanying documentation covered by 
this license (the "Software") to use, reproduce, display, distribute, execute, 
and transmit the Software, and to prepare derivative works of the Software, 
and to permit third-parties to whom the Software is furnished to do so, all 
subject to the following:

The copyright notices in the Software and this entire statement, including 
the above license grant, this restriction and the following disclaimer, must 
be included in all copies of the Software, in whole or in part, and all 
derivative works of the Software, unless such copies or derivative works are 
solely in the form of machine-executable object code generated by a source 
language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL
THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY 
DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING 
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
IN THE SOFTWARE.
 */
 
 
#ifndef _LIBRE_EFI_EFI_FS_H_
#define _LIBRE_EFI_EFI_FS_H_

#include <feral/stdtypes.h>


#define EFI_FILE_PROTOCOL_REVISION		0x00010000
#define EFI_FILE_PROTOCOL_REVISION2		0x00020000

#define EFI_FILE_PROTOCOL_LATEST_REVISION	EFI_FILE_PROTOCOL_REVISION2

typedef struct EFI_FILE_PROTOCOL;

typedef EFI_STATUS (EFIAPI *EFI_FILE_OPEN)(IN EFI_FILE_PROTOCOL* This, OUT EFI_FILE_PROTOCOL** NewHandle, IN CHAR16* FileName, IN UINT64 OpenMode, IN UINT64 Attributes);
typedef EFI_STATUS (EFIAPI *EFI_FILE_CLOSE)(IN EFI_FILE_PROTOCOL* This);

typedef struct EFI_FILE_PROTOCOL
{
	UINT64 Revision;
	EFI_FILE_OPEN Open;
	EFI_FILE_CLOSE Close;
	EFI_FILE_DELETE Delete;
	EFI_FILE_READ Read;
	EFI_FILE_WRITE Write;
	EFI_FILE_GET_POSITION GetPosition;
	EFI_FILE_SET_POSITION SetPosition;
	EFI_FILE_GET_INFO GetInfo;
	EFI_FILE_SET_INFO SetInfo;
	EFI_FILE_FLUSH Flush;
	
	// Added in revision 2.
	EFI_FILE_OPEN_EX OpenEx;
	EFI_FILE_READ_EX ReadEx;
	EFI_FILE_WRITE_EX WriteEx;
	EFI_FILE_FLUSH_EX FlushEx;
}EFI_FILE_PROTOCOL;

#define EFI_SIMPLE_FILESYSTEM_PROTOCOL_REVISION 0x00010000
 
#define EFI_SIMPLE_FILESYSTEM_PROTOCOL_GUID 				\
{									\
	0x0964E5B22,							\
	0x6459,								\
	0x11D2,								\
	0x8E,								\
	0x39,								\
	0x00,								\
	0xA0,								\
	0xC9,								\
	0x69,								\
	0x72,								\
	0x3B,								\
}

typedef struct EFI_SIMPLE_FILE_SYSTEM_PROTOCOL;

typedef EFI_STATUS (EFIAPI *EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_OPEN_VOLUME)(IN EFI_SIMPLE_FILE_SYSTEM_PROTOCOL *This, OUT EFI_FILE_PROTOCOL);
 
typedef struct EFI_SIMPLE_FILE_SYSTEM_PROTOCOL
{
	UINT64 Revision;
	EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_OPEN_VOLUME OpenVolume;
}EFI_SIMPLE_FILE_SYSTEM_PROTOCOL;



#endif
