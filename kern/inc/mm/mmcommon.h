/*
Copyright (c) 2019, Brian Schnepp

Permission is hereby granted, free of charge, to any person or organization 
obtaining a copy of the software and accompanying documentation covered by 
this license (the "Software") to use, reproduce, display, distribute, execute, 
and transmit the Software, and to prepare derivative works of the Software, 
and to permit third-parties to whom the Software is furnished to do so, all 
subject to the following:

The copyright notices in the Software and this entire statement, including 
the above license grant, this restriction and the following disclaimer, must 
be included in all copies of the Software, in whole or in part, and all 
derivative works of the Software, unless such copies or derivative works are 
solely in the form of machine-executable object code generated by a source 
language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL
THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY 
DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING 
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
IN THE SOFTWARE.
 */

#include <feral/feralstatus.h>
#include <feral/stdtypes.h>


#ifndef _FERAL_MM_COMMON_H_
#define _FERAL_MM_COMMON_H_

/* 
	When designing this, we'd probably do best referencing chapter 10 of RedmondOS Internals (6th edition),
	and some other books out there.
	
	We want to do some things, like overcommit virtual memory by default (~125% of what it wants initially, so adding an extra 4th, round down),
	so that a program which does a ton of malloc() and whatnot doesn't need to invoke the kernel per-se all that often (performance hack)
	... It already owns that memory, so let the C library deal with it. 
	
	We can make this easy by doing (initial_mem) + (initial_mem >> 2), so we don't do division at all.
 */

/* TODO */
typedef enum MmCoreContextStructureType
{
	MM_CORE_CONTEXT_STRUCTURE_TYPE_MAIN_STRUCTURE_TYPE = 0,
	
}MmCoreContextStructureType;

typedef struct MmCoreContext
{
	MmCoreContextStructureType sType;
	
}MmCoreContext;


#endif
