/*
Copyright (c) 2018, Brian Schnepp

Permission is hereby granted, free of charge, to any person or organization 
obtaining  a copy of the software and accompanying documentation covered by 
this license (the "Software") to use, reproduce, display, distribute, execute, 
and transmit the Software, and to prepare derivative works of the Software, 
and to permit third-parties to whom the Software is furnished to do so, all 
subject to the following:

The copyright notices in the Software and this entire statement, including 
the above license grant, this restriction and the following disclaimer, must 
be included in all copies of the Software, in whole or in part, and all 
derivative works of the Software, unless such copies or derivative works are 
solely in the form of machine-executable object code generated by a source 
language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL
THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY 
DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING 
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
IN THE SOFTWARE.
 */
 
#include <feral/stdtypes.h>
 
#ifndef _FERAL_LIBCPU_X86_64_H_
#define _FERAL_LIBCPU_X86_64_H_
 
struct x8664Registers;
struct x87Registers;


/* TODO */
#define RFLAGS_CARRY_FLAG_BIT				(0)
#define RFLAGS_PARITY_FLAG_BIT			(2)
 #define RFLAGS_ADJUST_FLAG_BIT			(4)
 #define RFLAGS_ZERO_FLAG_BIT				(6)
 #define RFLAGS_SIGN_FLAG_BIT				(7)
 #define RFLAGS_TRAP_FLAG_BIT				(8)
 #define RFLAGS_INTERRUPTION_FLAG_BIT	(9)
 
 
typedef struct x8664Core
{
	char CpuVendorName[12];	/* "FERAL FERAL!" */
	char CpuProductName[48];	/* "FERAL Zenlike Virtual CPU 1950  N-Core Processor" */
	UINT64 NumCores;
	DOUBLE* Clockspeed;		/* 4100000000.0000000 Hz (4.1Ghz) */
	struct x8664Registers* cores;
	struct x87Registers* floatingpointunits;
	/* TODO */
}

typedef struct x87Registers
{
	/* Include MMX and whatnot here too. */
}
 
typedef struct x8664Registers
{
	UINT64 rax;
	UINT64 rbx;
	UINT64 rcx;
	UINT64 rdx;
	
	UINT64 rip;
	UINT64 rsp;
	UINT64 rbp;
	UINT64 rsi;
	UINT64 rdi;
	
	UINT64 rflags;
	
	UINT64 r8;
	UINT64 r9;
	UINT64 r10;
	UINT64 r11;
	UINT64 r12;
	UINT64 r13;
	UINT64 r14;
	UINT64 r15;
	/* TODO */
}x8664Registers;
 
 #endif
