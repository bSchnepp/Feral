MAKE       = bmake # Insist on BSD make. This way we can distribute a self-hosting system without worrying about GPL issues. 
		   # (I don't want to be emailed every 15 seconds for source code requests, and certainly don't want to be 
		   # forced to package source for an insignifigant component with _every_ distribution). Also
                   # so that Feral can be used by just about anyone for just about any purpose they 
                   # want. (Fork the whole thing, modify as needed, all that stuff. Do not care about closed-source forks.)

		   # We still do use GNU xorriso and GNU GRUB though, so we'll have to eventually write a UEFI-capable Multiboot 2 bootloader and an ISO tool as well.

		   # Waypoint could also be used on systems which really shouldn't be compiling GNU stuff as part of the install process (RISC-V based video game consoles???).
		   # Compiling something takes much longer than wgetting the binary and slapping it in /usr/bin, anyway. Wouldn't want to annoy console people.
		   # (Especially if this ends up on a mobile console/laptop/something! That'd *REALLY* drain the battery.)

GDB        = lldb # Use LLVM debugger when we can, if we make a makerule for this in the future.

ARCH       = x86_64
KERNEL    := build/$(ARCH)/FERALKER.NEL
ISO       := build/WAYPOINT.ISO

LINKIN    := arch/$(ARCH)/linkin.lld
GRUB_CFG  := arch/$(ARCH)/grub.cfg

AS        := yasm       # We use yasm to assemble.
CC        := clang      # We use clang to compile.
CXX       := clang++    # We may use C++ for something later. (Would only ever really be a "C with classes" anyway.)
LD        := ld.lld

TARGET     = -target $(ARCH)-pc-none-gnu

INCLUDES  := inc
CFLAGS    := -std=c11 -ffreestanding -nostdlib -O2 -Wall -Wextra -mno-red-zone -c -v -mno-mmx -mno-sse -msoft-float -fno-vectorize $(TARGET)
# -c prevents linking (important!!!) and -v for verbosity.

# We don't really care about 'Entering directory...'.
MAKEFLAGS += --no-print-directory

