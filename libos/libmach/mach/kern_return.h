/*
Copyright (c) 2018, Brian Schnepp

Permission is hereby granted, free of charge, to any person or organization 
obtaining  a copy of the software and accompanying documentation covered by 
this license (the "Software") to use, reproduce, display, distribute, execute, 
and transmit the Software, and to prepare derivative works of the Software, 
and to permit third-parties to whom the Software is furnished to do so, all 
subject to the following:

The copyright notices in the Software and this entire statement, including 
the above license grant, this restriction and the following disclaimer, must 
be included in all copies of the Software, in whole or in part, and all 
derivative works of the Software, unless such copies or derivative works are 
solely in the form of machine-executable object code generated by a source 
language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL
THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY 
DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING 
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
IN THE SOFTWARE.
 */

#ifndef _MACH_KERN_RETURN_H_
#define _MACH_KERN_RETURN_H_

#include <feral/stdtypes.h>
typedef INT32 kern_return_t;

// chances are that we'll either translate FERALSTATUS to these or just outright ignore the mach libos unless it affects Feral.
// this whole library exists just so we can run gcc for GNU Mach\Hurd on Feral and other GNU programs.

#define KERN_SUCCESS (0x00) /* Everything's OK */
#define KERN_INVALID_ADDRESS (0x01) /* This memory address does not exist.*/
#define KERN_PROTECTION_FAILURE (0x02) /* Feral's memory protection layer won't let Mach personality access it. */
#define KERN_NO_SPACE (0x03) /* Address isn't specified, or it's already in use. */
#define KERN_INVALID_ARGUMENT (0x04)
#define KERN_FAILURE (0x05) /* For some reason, Feral couldn't imitate MACH properly, or it just can't be done. */
#define KERN_RESOURCE_SHORTAGE (0x06) /* The requested resources can't be allocated. */
#define KERN_NOT_RECIEVER (0x07) /* The Task doesn't have the necessary Feral port permissions to go through. (not reciever) */
#define KERN_NO_ACCESS (0x08) /* Compatibility. Ignore. */
#define KERN_MEMORY_FAILURE (0x09) /* Page fault occured. */
#define KERN_MEMORY_ERROR (0x0A) /* Memory object couldn't be returned. Probably temporary. */
#define KERN_ALREADY_IN_SET (0x0B) /* Compatibility (ignore it) */
#define KERN_NOT_IN_SET (0x0C) /* Recieve right's not a member of the port set. */
#define KERN_NAME_EXISTS (0x0D) /* The name already denotes a right in the task. */
#define KERN_ABORTED (0x0E) /* The operation was aborted. This may be that the recieving progam quit, for example. */
#define KERN_INVALID_NAME (0x0F) /* The name wasn't found in the task. */
#define KERN_INVALID_TASK (0x10) /* The task doesn't exist, or wasn't found or something. */
#define KERN_INVALID_RIGHT (0x11) /* The name wasn't an appropriate right.*/
#define KERN_INVALID_VALUE (0x12) /* Invalid value. */
#define KERN_UREFS_OVERFLOW (0x13) /* On Mach, this would overflow user references. */
#define KERN_INVALID_CAPABILITY (0x14) /* Port capability is improper. */
#define KERN_RIGHT_EXISTS (0x15) /* The task already has the relevant ports, but under a different name. */
#define KERN_INVALID_HOST (0x16) /* The target host isn't a host. */
#define KERN_MEMORY_PRESENT (0x17) /* There was an attempt to crate a redundant memory object. */
#define KERN_WRITE_PROTECTION_FAILURE (0x18) /* Mach personality attempted to write to a write-protected page. */
#define KERN_TERMINATED (0x19) /* The object has been terminated, and no longer exists. */

#endif
